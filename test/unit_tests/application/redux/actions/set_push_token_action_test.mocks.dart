// Mocks generated by Mockito 5.3.2 from annotations
// in pro_health_360/test/unit_tests/application/redux/actions/set_push_token_action_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:convert' as _i13;
import 'dart:typed_data' as _i14;

import 'package:dio/dio.dart' as _i24;
import 'package:flutter_graphql_client/src/i_flutter_graphql_client.dart'
    as _i11;
import 'package:http/http.dart' as _i2;
import 'package:logging/logging.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stream_chat/src/client/channel.dart' as _i9;
import 'package:stream_chat/src/client/client.dart' as _i3;
import 'package:stream_chat/src/client/retry_policy.dart' as _i5;
import 'package:stream_chat/src/core/api/requests.dart' as _i21;
import 'package:stream_chat/src/core/api/responses.dart' as _i7;
import 'package:stream_chat/src/core/api/stream_chat_api.dart' as _i26;
import 'package:stream_chat/src/core/http/token.dart' as _i8;
import 'package:stream_chat/src/core/http/token_manager.dart' as _i19;
import 'package:stream_chat/src/core/models/attachment_file.dart' as _i23;
import 'package:stream_chat/src/core/models/channel_model.dart' as _i22;
import 'package:stream_chat/src/core/models/channel_state.dart' as _i10;
import 'package:stream_chat/src/core/models/event.dart' as _i16;
import 'package:stream_chat/src/core/models/filter.dart' as _i20;
import 'package:stream_chat/src/core/models/member.dart' as _i27;
import 'package:stream_chat/src/core/models/message.dart' as _i25;
import 'package:stream_chat/src/core/models/own_user.dart' as _i6;
import 'package:stream_chat/src/core/models/user.dart' as _i18;
import 'package:stream_chat/src/db/chat_persistence_client.dart' as _i15;
import 'package:stream_chat/src/ws/connection_status.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientState_3 extends _i1.SmartFake implements _i3.ClientState {
  _FakeClientState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLevel_4 extends _i1.SmartFake implements _i4.Level {
  _FakeLevel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_5 extends _i1.SmartFake implements _i4.Logger {
  _FakeLogger_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRetryPolicy_6 extends _i1.SmartFake implements _i5.RetryPolicy {
  _FakeRetryPolicy_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOwnUser_7 extends _i1.SmartFake implements _i6.OwnUser {
  _FakeOwnUser_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallTokenPayload_8 extends _i1.SmartFake
    implements _i7.CallTokenPayload {
  _FakeCallTokenPayload_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateCallPayload_9 extends _i1.SmartFake
    implements _i7.CreateCallPayload {
  _FakeCreateCallPayload_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryUsersResponse_10 extends _i1.SmartFake
    implements _i7.QueryUsersResponse {
  _FakeQueryUsersResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryBannedUsersResponse_11 extends _i1.SmartFake
    implements _i7.QueryBannedUsersResponse {
  _FakeQueryBannedUsersResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchMessagesResponse_12 extends _i1.SmartFake
    implements _i7.SearchMessagesResponse {
  _FakeSearchMessagesResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendFileResponse_13 extends _i1.SmartFake
    implements _i7.SendFileResponse {
  _FakeSendFileResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendAttachmentResponse_14 extends _i1.SmartFake
    implements _i7.SendAttachmentResponse {
  _FakeSendAttachmentResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmptyResponse_15 extends _i1.SmartFake implements _i7.EmptyResponse {
  _FakeEmptyResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateChannelResponse_16 extends _i1.SmartFake
    implements _i7.UpdateChannelResponse {
  _FakeUpdateChannelResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePartialUpdateChannelResponse_17 extends _i1.SmartFake
    implements _i7.PartialUpdateChannelResponse {
  _FakePartialUpdateChannelResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListDevicesResponse_18 extends _i1.SmartFake
    implements _i7.ListDevicesResponse {
  _FakeListDevicesResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeToken_19 extends _i1.SmartFake implements _i8.Token {
  _FakeToken_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannel_20 extends _i1.SmartFake implements _i9.Channel {
  _FakeChannel_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelState_21 extends _i1.SmartFake implements _i10.ChannelState {
  _FakeChannelState_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryMembersResponse_22 extends _i1.SmartFake
    implements _i7.QueryMembersResponse {
  _FakeQueryMembersResponse_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAcceptInviteResponse_23 extends _i1.SmartFake
    implements _i7.AcceptInviteResponse {
  _FakeAcceptInviteResponse_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRejectInviteResponse_24 extends _i1.SmartFake
    implements _i7.RejectInviteResponse {
  _FakeRejectInviteResponse_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddMembersResponse_25 extends _i1.SmartFake
    implements _i7.AddMembersResponse {
  _FakeAddMembersResponse_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveMembersResponse_26 extends _i1.SmartFake
    implements _i7.RemoveMembersResponse {
  _FakeRemoveMembersResponse_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInviteMembersResponse_27 extends _i1.SmartFake
    implements _i7.InviteMembersResponse {
  _FakeInviteMembersResponse_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendActionResponse_28 extends _i1.SmartFake
    implements _i7.SendActionResponse {
  _FakeSendActionResponse_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateUsersResponse_29 extends _i1.SmartFake
    implements _i7.UpdateUsersResponse {
  _FakeUpdateUsersResponse_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendReactionResponse_30 extends _i1.SmartFake
    implements _i7.SendReactionResponse {
  _FakeSendReactionResponse_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendMessageResponse_31 extends _i1.SmartFake
    implements _i7.SendMessageResponse {
  _FakeSendMessageResponse_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryRepliesResponse_32 extends _i1.SmartFake
    implements _i7.QueryRepliesResponse {
  _FakeQueryRepliesResponse_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryReactionsResponse_33 extends _i1.SmartFake
    implements _i7.QueryReactionsResponse {
  _FakeQueryReactionsResponse_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateMessageResponse_34 extends _i1.SmartFake
    implements _i7.UpdateMessageResponse {
  _FakeUpdateMessageResponse_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMessageResponse_35 extends _i1.SmartFake
    implements _i7.GetMessageResponse {
  _FakeGetMessageResponse_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMessagesByIdResponse_36 extends _i1.SmartFake
    implements _i7.GetMessagesByIdResponse {
  _FakeGetMessagesByIdResponse_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTranslateMessageResponse_37 extends _i1.SmartFake
    implements _i7.TranslateMessageResponse {
  _FakeTranslateMessageResponse_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOGAttachmentResponse_38 extends _i1.SmartFake
    implements _i7.OGAttachmentResponse {
  _FakeOGAttachmentResponse_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IGraphQlClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGraphQlClient extends _i1.Mock implements _i11.IGraphQlClient {
  MockIGraphQlClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get idToken => (super.noSuchMethod(
        Invocation.getter(#idToken),
        returnValue: '',
      ) as String);
  @override
  set idToken(String? _idToken) => super.noSuchMethod(
        Invocation.setter(
          #idToken,
          _idToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get endpoint => (super.noSuchMethod(
        Invocation.getter(#endpoint),
        returnValue: '',
      ) as String);
  @override
  set endpoint(String? _endpoint) => super.noSuchMethod(
        Invocation.setter(
          #endpoint,
          _endpoint,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get requestHeaders => (super.noSuchMethod(
        Invocation.getter(#requestHeaders),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  bool clientIsValid() => (super.noSuchMethod(
        Invocation.method(
          #clientIsValid,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool checkQueryString(String? query) => (super.noSuchMethod(
        Invocation.method(
          #checkQueryString,
          [query],
        ),
        returnValue: false,
      ) as bool);
  @override
  Uri fromUriOrString(dynamic uri) => (super.noSuchMethod(
        Invocation.method(
          #fromUriOrString,
          [uri],
        ),
        returnValue: _FakeUri_0(
          this,
          Invocation.method(
            #fromUriOrString,
            [uri],
          ),
        ),
      ) as Uri);
  @override
  Map<String, dynamic> toMap(_i2.Response? response) => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [response],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i12.Future<_i2.Response> query(
    String? queryString,
    Map<String, dynamic>? variables,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [
            queryString,
            variables,
          ],
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #query,
            [
              queryString,
              variables,
            ],
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> postWithTimeout(Map<String, dynamic>? bodyMap) =>
      (super.noSuchMethod(
        Invocation.method(
          #postWithTimeout,
          [bodyMap],
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #postWithTimeout,
            [bodyMap],
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> callRESTAPI({
    required String? endpoint,
    required String? method,
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #callRESTAPI,
          [],
          {
            #endpoint: endpoint,
            #method: method,
            #variables: variables,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #callRESTAPI,
            [],
            {
              #endpoint: endpoint,
              #method: method,
              #variables: variables,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i12.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i12.Future<_i2.StreamedResponse>);
  @override
  _i12.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);
  @override
  _i12.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<_i14.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i14.Uint8List>.value(_i14.Uint8List(0)),
      ) as _i12.Future<_i14.Uint8List>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StreamChatClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamChatClient extends _i1.Mock implements _i3.StreamChatClient {
  MockStreamChatClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ClientState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeClientState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ClientState);
  @override
  set state(_i3.ClientState? _state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          _state,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Level get logLevel => (super.noSuchMethod(
        Invocation.getter(#logLevel),
        returnValue: _FakeLevel_4(
          this,
          Invocation.getter(#logLevel),
        ),
      ) as _i4.Level);
  @override
  _i4.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_5(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i4.Logger);
  @override
  _i3.LogHandlerFunction get logHandlerFunction => (super.noSuchMethod(
        Invocation.getter(#logHandlerFunction),
        returnValue: (_i4.LogRecord record) {},
      ) as _i3.LogHandlerFunction);
  @override
  set chatPersistenceClient(_i15.ChatPersistenceClient? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #chatPersistenceClient,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get persistenceEnabled => (super.noSuchMethod(
        Invocation.getter(#persistenceEnabled),
        returnValue: false,
      ) as bool);
  @override
  _i5.RetryPolicy get retryPolicy => (super.noSuchMethod(
        Invocation.getter(#retryPolicy),
        returnValue: _FakeRetryPolicy_6(
          this,
          Invocation.getter(#retryPolicy),
        ),
      ) as _i5.RetryPolicy);
  @override
  _i12.Stream<_i16.Event> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i12.Stream<_i16.Event>.empty(),
      ) as _i12.Stream<_i16.Event>);
  @override
  _i17.ConnectionStatus get wsConnectionStatus => (super.noSuchMethod(
        Invocation.getter(#wsConnectionStatus),
        returnValue: _i17.ConnectionStatus.connected,
      ) as _i17.ConnectionStatus);
  @override
  _i12.Stream<_i17.ConnectionStatus> get wsConnectionStatusStream =>
      (super.noSuchMethod(
        Invocation.getter(#wsConnectionStatusStream),
        returnValue: _i12.Stream<_i17.ConnectionStatus>.empty(),
      ) as _i12.Stream<_i17.ConnectionStatus>);
  @override
  _i4.Logger detachedLogger(String? name) => (super.noSuchMethod(
        Invocation.method(
          #detachedLogger,
          [name],
        ),
        returnValue: _FakeLogger_5(
          this,
          Invocation.method(
            #detachedLogger,
            [name],
          ),
        ),
      ) as _i4.Logger);
  @override
  _i12.Future<_i6.OwnUser> connectUser(
    _i18.User? user,
    String? token, {
    bool? connectWebSocket = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectUser,
          [
            user,
            token,
          ],
          {#connectWebSocket: connectWebSocket},
        ),
        returnValue: _i12.Future<_i6.OwnUser>.value(_FakeOwnUser_7(
          this,
          Invocation.method(
            #connectUser,
            [
              user,
              token,
            ],
            {#connectWebSocket: connectWebSocket},
          ),
        )),
      ) as _i12.Future<_i6.OwnUser>);
  @override
  _i12.Future<_i6.OwnUser> connectUserWithProvider(
    _i18.User? user,
    _i19.TokenProvider? tokenProvider, {
    bool? connectWebSocket = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectUserWithProvider,
          [
            user,
            tokenProvider,
          ],
          {#connectWebSocket: connectWebSocket},
        ),
        returnValue: _i12.Future<_i6.OwnUser>.value(_FakeOwnUser_7(
          this,
          Invocation.method(
            #connectUserWithProvider,
            [
              user,
              tokenProvider,
            ],
            {#connectWebSocket: connectWebSocket},
          ),
        )),
      ) as _i12.Future<_i6.OwnUser>);
  @override
  _i12.Future<_i6.OwnUser> connectAnonymousUser(
          {bool? connectWebSocket = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectAnonymousUser,
          [],
          {#connectWebSocket: connectWebSocket},
        ),
        returnValue: _i12.Future<_i6.OwnUser>.value(_FakeOwnUser_7(
          this,
          Invocation.method(
            #connectAnonymousUser,
            [],
            {#connectWebSocket: connectWebSocket},
          ),
        )),
      ) as _i12.Future<_i6.OwnUser>);
  @override
  _i12.Future<_i6.OwnUser> connectGuestUser(
    _i18.User? user, {
    bool? connectWebSocket = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectGuestUser,
          [user],
          {#connectWebSocket: connectWebSocket},
        ),
        returnValue: _i12.Future<_i6.OwnUser>.value(_FakeOwnUser_7(
          this,
          Invocation.method(
            #connectGuestUser,
            [user],
            {#connectWebSocket: connectWebSocket},
          ),
        )),
      ) as _i12.Future<_i6.OwnUser>);
  @override
  _i12.Future<_i6.OwnUser> openConnection(
          {bool? includeUserDetailsInConnectCall = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #openConnection,
          [],
          {#includeUserDetailsInConnectCall: includeUserDetailsInConnectCall},
        ),
        returnValue: _i12.Future<_i6.OwnUser>.value(_FakeOwnUser_7(
          this,
          Invocation.method(
            #openConnection,
            [],
            {#includeUserDetailsInConnectCall: includeUserDetailsInConnectCall},
          ),
        )),
      ) as _i12.Future<_i6.OwnUser>);
  @override
  void closeConnection() => super.noSuchMethod(
        Invocation.method(
          #closeConnection,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleEvent(_i16.Event? event) => super.noSuchMethod(
        Invocation.method(
          #handleEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Stream<_i16.Event> on([
    String? eventType,
    String? eventType2,
    String? eventType3,
    String? eventType4,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #on,
          [
            eventType,
            eventType2,
            eventType3,
            eventType4,
          ],
        ),
        returnValue: _i12.Stream<_i16.Event>.empty(),
      ) as _i12.Stream<_i16.Event>);
  @override
  _i12.Future<void> sync({
    List<String>? cids,
    DateTime? lastSyncAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sync,
          [],
          {
            #cids: cids,
            #lastSyncAt: lastSyncAt,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Stream<List<_i9.Channel>> queryChannels({
    _i20.Filter? filter,
    List<_i21.SortOption<_i22.ChannelModel>>? sort,
    List<_i21.SortOption<_i10.ChannelState>>? channelStateSort,
    bool? state = true,
    bool? watch = true,
    bool? presence = false,
    int? memberLimit,
    int? messageLimit,
    _i21.PaginationParams? paginationParams = const _i21.PaginationParams(),
    bool? waitForConnect = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryChannels,
          [],
          {
            #filter: filter,
            #sort: sort,
            #channelStateSort: channelStateSort,
            #state: state,
            #watch: watch,
            #presence: presence,
            #memberLimit: memberLimit,
            #messageLimit: messageLimit,
            #paginationParams: paginationParams,
            #waitForConnect: waitForConnect,
          },
        ),
        returnValue: _i12.Stream<List<_i9.Channel>>.empty(),
      ) as _i12.Stream<List<_i9.Channel>>);
  @override
  _i12.Future<_i7.CallTokenPayload> getCallToken(String? callId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCallToken,
          [callId],
        ),
        returnValue:
            _i12.Future<_i7.CallTokenPayload>.value(_FakeCallTokenPayload_8(
          this,
          Invocation.method(
            #getCallToken,
            [callId],
          ),
        )),
      ) as _i12.Future<_i7.CallTokenPayload>);
  @override
  _i12.Future<_i7.CreateCallPayload> createCall({
    required String? callId,
    required String? callType,
    required String? channelType,
    required String? channelId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCall,
          [],
          {
            #callId: callId,
            #callType: callType,
            #channelType: channelType,
            #channelId: channelId,
          },
        ),
        returnValue:
            _i12.Future<_i7.CreateCallPayload>.value(_FakeCreateCallPayload_9(
          this,
          Invocation.method(
            #createCall,
            [],
            {
              #callId: callId,
              #callType: callType,
              #channelType: channelType,
              #channelId: channelId,
            },
          ),
        )),
      ) as _i12.Future<_i7.CreateCallPayload>);
  @override
  _i12.Future<List<_i9.Channel>> queryChannelsOnline({
    _i20.Filter? filter,
    List<_i21.SortOption<dynamic>>? sort,
    bool? state = true,
    bool? watch = true,
    bool? presence = false,
    int? memberLimit,
    int? messageLimit,
    bool? waitForConnect = true,
    _i21.PaginationParams? paginationParams = const _i21.PaginationParams(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryChannelsOnline,
          [],
          {
            #filter: filter,
            #sort: sort,
            #state: state,
            #watch: watch,
            #presence: presence,
            #memberLimit: memberLimit,
            #messageLimit: messageLimit,
            #waitForConnect: waitForConnect,
            #paginationParams: paginationParams,
          },
        ),
        returnValue: _i12.Future<List<_i9.Channel>>.value(<_i9.Channel>[]),
      ) as _i12.Future<List<_i9.Channel>>);
  @override
  _i12.Future<List<_i9.Channel>> queryChannelsOffline({
    _i20.Filter? filter,
    List<_i21.SortOption<_i22.ChannelModel>>? sort,
    List<_i21.SortOption<_i10.ChannelState>>? channelStateSort,
    _i21.PaginationParams? paginationParams = const _i21.PaginationParams(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryChannelsOffline,
          [],
          {
            #filter: filter,
            #sort: sort,
            #channelStateSort: channelStateSort,
            #paginationParams: paginationParams,
          },
        ),
        returnValue: _i12.Future<List<_i9.Channel>>.value(<_i9.Channel>[]),
      ) as _i12.Future<List<_i9.Channel>>);
  @override
  _i12.Future<_i7.QueryUsersResponse> queryUsers({
    bool? presence,
    _i20.Filter? filter,
    List<_i21.SortOption<dynamic>>? sort,
    _i21.PaginationParams? pagination,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryUsers,
          [],
          {
            #presence: presence,
            #filter: filter,
            #sort: sort,
            #pagination: pagination,
          },
        ),
        returnValue: _i12.Future<_i7.QueryUsersResponse>.value(
            _FakeQueryUsersResponse_10(
          this,
          Invocation.method(
            #queryUsers,
            [],
            {
              #presence: presence,
              #filter: filter,
              #sort: sort,
              #pagination: pagination,
            },
          ),
        )),
      ) as _i12.Future<_i7.QueryUsersResponse>);
  @override
  _i12.Future<_i7.QueryBannedUsersResponse> queryBannedUsers({
    required _i20.Filter? filter,
    List<_i21.SortOption<dynamic>>? sort,
    _i21.PaginationParams? pagination,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryBannedUsers,
          [],
          {
            #filter: filter,
            #sort: sort,
            #pagination: pagination,
          },
        ),
        returnValue: _i12.Future<_i7.QueryBannedUsersResponse>.value(
            _FakeQueryBannedUsersResponse_11(
          this,
          Invocation.method(
            #queryBannedUsers,
            [],
            {
              #filter: filter,
              #sort: sort,
              #pagination: pagination,
            },
          ),
        )),
      ) as _i12.Future<_i7.QueryBannedUsersResponse>);
  @override
  _i12.Future<_i7.SearchMessagesResponse> search(
    _i20.Filter? filter, {
    String? query,
    List<_i21.SortOption<dynamic>>? sort,
    _i21.PaginationParams? paginationParams,
    _i20.Filter? messageFilters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [filter],
          {
            #query: query,
            #sort: sort,
            #paginationParams: paginationParams,
            #messageFilters: messageFilters,
          },
        ),
        returnValue: _i12.Future<_i7.SearchMessagesResponse>.value(
            _FakeSearchMessagesResponse_12(
          this,
          Invocation.method(
            #search,
            [filter],
            {
              #query: query,
              #sort: sort,
              #paginationParams: paginationParams,
              #messageFilters: messageFilters,
            },
          ),
        )),
      ) as _i12.Future<_i7.SearchMessagesResponse>);
  @override
  _i12.Future<_i7.SendFileResponse> sendFile(
    _i23.AttachmentFile? file,
    String? channelId,
    String? channelType, {
    _i24.ProgressCallback? onSendProgress,
    _i24.CancelToken? cancelToken,
    Map<String, Object?>? extraData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFile,
          [
            file,
            channelId,
            channelType,
          ],
          {
            #onSendProgress: onSendProgress,
            #cancelToken: cancelToken,
            #extraData: extraData,
          },
        ),
        returnValue:
            _i12.Future<_i7.SendFileResponse>.value(_FakeSendFileResponse_13(
          this,
          Invocation.method(
            #sendFile,
            [
              file,
              channelId,
              channelType,
            ],
            {
              #onSendProgress: onSendProgress,
              #cancelToken: cancelToken,
              #extraData: extraData,
            },
          ),
        )),
      ) as _i12.Future<_i7.SendFileResponse>);
  @override
  _i12.Future<_i7.SendAttachmentResponse> sendImage(
    _i23.AttachmentFile? image,
    String? channelId,
    String? channelType, {
    _i24.ProgressCallback? onSendProgress,
    _i24.CancelToken? cancelToken,
    Map<String, Object?>? extraData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendImage,
          [
            image,
            channelId,
            channelType,
          ],
          {
            #onSendProgress: onSendProgress,
            #cancelToken: cancelToken,
            #extraData: extraData,
          },
        ),
        returnValue: _i12.Future<_i7.SendAttachmentResponse>.value(
            _FakeSendAttachmentResponse_14(
          this,
          Invocation.method(
            #sendImage,
            [
              image,
              channelId,
              channelType,
            ],
            {
              #onSendProgress: onSendProgress,
              #cancelToken: cancelToken,
              #extraData: extraData,
            },
          ),
        )),
      ) as _i12.Future<_i7.SendAttachmentResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> deleteFile(
    String? url,
    String? channelId,
    String? channelType, {
    _i24.CancelToken? cancelToken,
    Map<String, Object?>? extraData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFile,
          [
            url,
            channelId,
            channelType,
          ],
          {
            #cancelToken: cancelToken,
            #extraData: extraData,
          },
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #deleteFile,
            [
              url,
              channelId,
              channelType,
            ],
            {
              #cancelToken: cancelToken,
              #extraData: extraData,
            },
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> deleteImage(
    String? url,
    String? channelId,
    String? channelType, {
    _i24.CancelToken? cancelToken,
    Map<String, Object?>? extraData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteImage,
          [
            url,
            channelId,
            channelType,
          ],
          {
            #cancelToken: cancelToken,
            #extraData: extraData,
          },
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #deleteImage,
            [
              url,
              channelId,
              channelType,
            ],
            {
              #cancelToken: cancelToken,
              #extraData: extraData,
            },
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.UpdateChannelResponse> updateChannel(
    String? channelId,
    String? channelType,
    Map<String, Object?>? data, {
    _i25.Message? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChannel,
          [
            channelId,
            channelType,
            data,
          ],
          {#message: message},
        ),
        returnValue: _i12.Future<_i7.UpdateChannelResponse>.value(
            _FakeUpdateChannelResponse_16(
          this,
          Invocation.method(
            #updateChannel,
            [
              channelId,
              channelType,
              data,
            ],
            {#message: message},
          ),
        )),
      ) as _i12.Future<_i7.UpdateChannelResponse>);
  @override
  _i12.Future<_i7.PartialUpdateChannelResponse> updateChannelPartial(
    String? channelId,
    String? channelType, {
    Map<String, Object?>? set,
    List<String>? unset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChannelPartial,
          [
            channelId,
            channelType,
          ],
          {
            #set: set,
            #unset: unset,
          },
        ),
        returnValue: _i12.Future<_i7.PartialUpdateChannelResponse>.value(
            _FakePartialUpdateChannelResponse_17(
          this,
          Invocation.method(
            #updateChannelPartial,
            [
              channelId,
              channelType,
            ],
            {
              #set: set,
              #unset: unset,
            },
          ),
        )),
      ) as _i12.Future<_i7.PartialUpdateChannelResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> addDevice(
    String? id,
    _i26.PushProvider? pushProvider, {
    String? pushProviderName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDevice,
          [
            id,
            pushProvider,
          ],
          {#pushProviderName: pushProviderName},
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #addDevice,
            [
              id,
              pushProvider,
            ],
            {#pushProviderName: pushProviderName},
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.ListDevicesResponse> getDevices() => (super.noSuchMethod(
        Invocation.method(
          #getDevices,
          [],
        ),
        returnValue: _i12.Future<_i7.ListDevicesResponse>.value(
            _FakeListDevicesResponse_18(
          this,
          Invocation.method(
            #getDevices,
            [],
          ),
        )),
      ) as _i12.Future<_i7.ListDevicesResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> removeDevice(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeDevice,
          [id],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #removeDevice,
            [id],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i8.Token devToken(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #devToken,
          [userId],
        ),
        returnValue: _FakeToken_19(
          this,
          Invocation.method(
            #devToken,
            [userId],
          ),
        ),
      ) as _i8.Token);
  @override
  _i9.Channel channel(
    String? type, {
    String? id,
    Map<String, Object?>? extraData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [type],
          {
            #id: id,
            #extraData: extraData,
          },
        ),
        returnValue: _FakeChannel_20(
          this,
          Invocation.method(
            #channel,
            [type],
            {
              #id: id,
              #extraData: extraData,
            },
          ),
        ),
      ) as _i9.Channel);
  @override
  _i12.Future<_i10.ChannelState> createChannel(
    String? channelType, {
    String? channelId,
    Map<String, Object?>? channelData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChannel,
          [channelType],
          {
            #channelId: channelId,
            #channelData: channelData,
          },
        ),
        returnValue: _i12.Future<_i10.ChannelState>.value(_FakeChannelState_21(
          this,
          Invocation.method(
            #createChannel,
            [channelType],
            {
              #channelId: channelId,
              #channelData: channelData,
            },
          ),
        )),
      ) as _i12.Future<_i10.ChannelState>);
  @override
  _i12.Future<_i10.ChannelState> watchChannel(
    String? channelType, {
    String? channelId,
    Map<String, Object?>? channelData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchChannel,
          [channelType],
          {
            #channelId: channelId,
            #channelData: channelData,
          },
        ),
        returnValue: _i12.Future<_i10.ChannelState>.value(_FakeChannelState_21(
          this,
          Invocation.method(
            #watchChannel,
            [channelType],
            {
              #channelId: channelId,
              #channelData: channelData,
            },
          ),
        )),
      ) as _i12.Future<_i10.ChannelState>);
  @override
  _i12.Future<_i10.ChannelState> queryChannel(
    String? channelType, {
    bool? state = true,
    bool? watch = false,
    bool? presence = false,
    String? channelId,
    Map<String, Object?>? channelData,
    _i21.PaginationParams? messagesPagination,
    _i21.PaginationParams? membersPagination,
    _i21.PaginationParams? watchersPagination,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryChannel,
          [channelType],
          {
            #state: state,
            #watch: watch,
            #presence: presence,
            #channelId: channelId,
            #channelData: channelData,
            #messagesPagination: messagesPagination,
            #membersPagination: membersPagination,
            #watchersPagination: watchersPagination,
          },
        ),
        returnValue: _i12.Future<_i10.ChannelState>.value(_FakeChannelState_21(
          this,
          Invocation.method(
            #queryChannel,
            [channelType],
            {
              #state: state,
              #watch: watch,
              #presence: presence,
              #channelId: channelId,
              #channelData: channelData,
              #messagesPagination: messagesPagination,
              #membersPagination: membersPagination,
              #watchersPagination: watchersPagination,
            },
          ),
        )),
      ) as _i12.Future<_i10.ChannelState>);
  @override
  _i12.Future<_i7.QueryMembersResponse> queryMembers(
    String? channelType, {
    _i20.Filter? filter,
    String? channelId,
    List<_i27.Member>? members,
    List<_i21.SortOption<dynamic>>? sort,
    _i21.PaginationParams? pagination,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryMembers,
          [channelType],
          {
            #filter: filter,
            #channelId: channelId,
            #members: members,
            #sort: sort,
            #pagination: pagination,
          },
        ),
        returnValue: _i12.Future<_i7.QueryMembersResponse>.value(
            _FakeQueryMembersResponse_22(
          this,
          Invocation.method(
            #queryMembers,
            [channelType],
            {
              #filter: filter,
              #channelId: channelId,
              #members: members,
              #sort: sort,
              #pagination: pagination,
            },
          ),
        )),
      ) as _i12.Future<_i7.QueryMembersResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> hideChannel(
    String? channelId,
    String? channelType, {
    bool? clearHistory = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hideChannel,
          [
            channelId,
            channelType,
          ],
          {#clearHistory: clearHistory},
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #hideChannel,
            [
              channelId,
              channelType,
            ],
            {#clearHistory: clearHistory},
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> showChannel(
    String? channelId,
    String? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showChannel,
          [
            channelId,
            channelType,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #showChannel,
            [
              channelId,
              channelType,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> deleteChannel(
    String? channelId,
    String? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteChannel,
          [
            channelId,
            channelType,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #deleteChannel,
            [
              channelId,
              channelType,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> truncateChannel(
    String? channelId,
    String? channelType, {
    _i25.Message? message,
    bool? skipPush,
    DateTime? truncatedAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #truncateChannel,
          [
            channelId,
            channelType,
          ],
          {
            #message: message,
            #skipPush: skipPush,
            #truncatedAt: truncatedAt,
          },
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #truncateChannel,
            [
              channelId,
              channelType,
            ],
            {
              #message: message,
              #skipPush: skipPush,
              #truncatedAt: truncatedAt,
            },
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> muteChannel(
    String? channelCid, {
    Duration? expiration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteChannel,
          [channelCid],
          {#expiration: expiration},
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #muteChannel,
            [channelCid],
            {#expiration: expiration},
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> unmuteChannel(String? channelCid) =>
      (super.noSuchMethod(
        Invocation.method(
          #unmuteChannel,
          [channelCid],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #unmuteChannel,
            [channelCid],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.AcceptInviteResponse> acceptChannelInvite(
    String? channelId,
    String? channelType, {
    _i25.Message? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptChannelInvite,
          [
            channelId,
            channelType,
          ],
          {#message: message},
        ),
        returnValue: _i12.Future<_i7.AcceptInviteResponse>.value(
            _FakeAcceptInviteResponse_23(
          this,
          Invocation.method(
            #acceptChannelInvite,
            [
              channelId,
              channelType,
            ],
            {#message: message},
          ),
        )),
      ) as _i12.Future<_i7.AcceptInviteResponse>);
  @override
  _i12.Future<_i7.RejectInviteResponse> rejectChannelInvite(
    String? channelId,
    String? channelType, {
    _i25.Message? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectChannelInvite,
          [
            channelId,
            channelType,
          ],
          {#message: message},
        ),
        returnValue: _i12.Future<_i7.RejectInviteResponse>.value(
            _FakeRejectInviteResponse_24(
          this,
          Invocation.method(
            #rejectChannelInvite,
            [
              channelId,
              channelType,
            ],
            {#message: message},
          ),
        )),
      ) as _i12.Future<_i7.RejectInviteResponse>);
  @override
  _i12.Future<_i7.AddMembersResponse> addChannelMembers(
    String? channelId,
    String? channelType,
    List<String>? memberIds, {
    _i25.Message? message,
    bool? hideHistory = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addChannelMembers,
          [
            channelId,
            channelType,
            memberIds,
          ],
          {
            #message: message,
            #hideHistory: hideHistory,
          },
        ),
        returnValue: _i12.Future<_i7.AddMembersResponse>.value(
            _FakeAddMembersResponse_25(
          this,
          Invocation.method(
            #addChannelMembers,
            [
              channelId,
              channelType,
              memberIds,
            ],
            {
              #message: message,
              #hideHistory: hideHistory,
            },
          ),
        )),
      ) as _i12.Future<_i7.AddMembersResponse>);
  @override
  _i12.Future<_i7.RemoveMembersResponse> removeChannelMembers(
    String? channelId,
    String? channelType,
    List<String>? memberIds, {
    _i25.Message? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannelMembers,
          [
            channelId,
            channelType,
            memberIds,
          ],
          {#message: message},
        ),
        returnValue: _i12.Future<_i7.RemoveMembersResponse>.value(
            _FakeRemoveMembersResponse_26(
          this,
          Invocation.method(
            #removeChannelMembers,
            [
              channelId,
              channelType,
              memberIds,
            ],
            {#message: message},
          ),
        )),
      ) as _i12.Future<_i7.RemoveMembersResponse>);
  @override
  _i12.Future<_i7.InviteMembersResponse> inviteChannelMembers(
    String? channelId,
    String? channelType,
    List<String>? memberIds, {
    _i25.Message? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteChannelMembers,
          [
            channelId,
            channelType,
            memberIds,
          ],
          {#message: message},
        ),
        returnValue: _i12.Future<_i7.InviteMembersResponse>.value(
            _FakeInviteMembersResponse_27(
          this,
          Invocation.method(
            #inviteChannelMembers,
            [
              channelId,
              channelType,
              memberIds,
            ],
            {#message: message},
          ),
        )),
      ) as _i12.Future<_i7.InviteMembersResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> stopChannelWatching(
    String? channelId,
    String? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopChannelWatching,
          [
            channelId,
            channelType,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #stopChannelWatching,
            [
              channelId,
              channelType,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.SendActionResponse> sendAction(
    String? channelId,
    String? channelType,
    String? messageId,
    Map<String, Object?>? formData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAction,
          [
            channelId,
            channelType,
            messageId,
            formData,
          ],
        ),
        returnValue: _i12.Future<_i7.SendActionResponse>.value(
            _FakeSendActionResponse_28(
          this,
          Invocation.method(
            #sendAction,
            [
              channelId,
              channelType,
              messageId,
              formData,
            ],
          ),
        )),
      ) as _i12.Future<_i7.SendActionResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> markChannelRead(
    String? channelId,
    String? channelType, {
    String? messageId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markChannelRead,
          [
            channelId,
            channelType,
          ],
          {#messageId: messageId},
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #markChannelRead,
            [
              channelId,
              channelType,
            ],
            {#messageId: messageId},
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.UpdateUsersResponse> updateUser(_i18.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i12.Future<_i7.UpdateUsersResponse>.value(
            _FakeUpdateUsersResponse_29(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
      ) as _i12.Future<_i7.UpdateUsersResponse>);
  @override
  _i12.Future<_i7.UpdateUsersResponse> updateUsers(List<_i18.User>? users) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUsers,
          [users],
        ),
        returnValue: _i12.Future<_i7.UpdateUsersResponse>.value(
            _FakeUpdateUsersResponse_29(
          this,
          Invocation.method(
            #updateUsers,
            [users],
          ),
        )),
      ) as _i12.Future<_i7.UpdateUsersResponse>);
  @override
  _i12.Future<_i7.UpdateUsersResponse> partialUpdateUser(
    String? id, {
    Map<String, Object?>? set,
    List<String>? unset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #partialUpdateUser,
          [id],
          {
            #set: set,
            #unset: unset,
          },
        ),
        returnValue: _i12.Future<_i7.UpdateUsersResponse>.value(
            _FakeUpdateUsersResponse_29(
          this,
          Invocation.method(
            #partialUpdateUser,
            [id],
            {
              #set: set,
              #unset: unset,
            },
          ),
        )),
      ) as _i12.Future<_i7.UpdateUsersResponse>);
  @override
  _i12.Future<_i7.UpdateUsersResponse> partialUpdateUsers(
          List<_i21.PartialUpdateUserRequest>? users) =>
      (super.noSuchMethod(
        Invocation.method(
          #partialUpdateUsers,
          [users],
        ),
        returnValue: _i12.Future<_i7.UpdateUsersResponse>.value(
            _FakeUpdateUsersResponse_29(
          this,
          Invocation.method(
            #partialUpdateUsers,
            [users],
          ),
        )),
      ) as _i12.Future<_i7.UpdateUsersResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> banUser(
    String? targetUserId, [
    Map<String, dynamic>? options = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #banUser,
          [
            targetUserId,
            options,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #banUser,
            [
              targetUserId,
              options,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> unbanUser(
    String? targetUserId, [
    Map<String, dynamic>? options = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbanUser,
          [
            targetUserId,
            options,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #unbanUser,
            [
              targetUserId,
              options,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> shadowBan(
    String? targetID, [
    Map<String, dynamic>? options = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #shadowBan,
          [
            targetID,
            options,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #shadowBan,
            [
              targetID,
              options,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> removeShadowBan(
    String? targetID, [
    Map<String, dynamic>? options = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeShadowBan,
          [
            targetID,
            options,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #removeShadowBan,
            [
              targetID,
              options,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> muteUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteUser,
          [userId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #muteUser,
            [userId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> unmuteUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unmuteUser,
          [userId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #unmuteUser,
            [userId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> flagMessage(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #flagMessage,
          [messageId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #flagMessage,
            [messageId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> unflagMessage(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unflagMessage,
          [messageId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #unflagMessage,
            [messageId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> flagUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #flagUser,
          [userId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #flagUser,
            [userId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> unflagUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unflagUser,
          [userId],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #unflagUser,
            [userId],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> markAllRead() => (super.noSuchMethod(
        Invocation.method(
          #markAllRead,
          [],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #markAllRead,
            [],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> sendEvent(
    String? channelId,
    String? channelType,
    _i16.Event? event,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEvent,
          [
            channelId,
            channelType,
            event,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #sendEvent,
            [
              channelId,
              channelType,
              event,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.SendReactionResponse> sendReaction(
    String? messageId,
    String? reactionType, {
    int? score = 1,
    Map<String, Object?>? extraData = const {},
    bool? enforceUnique = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendReaction,
          [
            messageId,
            reactionType,
          ],
          {
            #score: score,
            #extraData: extraData,
            #enforceUnique: enforceUnique,
          },
        ),
        returnValue: _i12.Future<_i7.SendReactionResponse>.value(
            _FakeSendReactionResponse_30(
          this,
          Invocation.method(
            #sendReaction,
            [
              messageId,
              reactionType,
            ],
            {
              #score: score,
              #extraData: extraData,
              #enforceUnique: enforceUnique,
            },
          ),
        )),
      ) as _i12.Future<_i7.SendReactionResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> deleteReaction(
    String? messageId,
    String? reactionType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReaction,
          [
            messageId,
            reactionType,
          ],
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #deleteReaction,
            [
              messageId,
              reactionType,
            ],
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.SendMessageResponse> sendMessage(
    _i25.Message? message,
    String? channelId,
    String? channelType, {
    bool? skipPush = false,
    bool? skipEnrichUrl = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            message,
            channelId,
            channelType,
          ],
          {
            #skipPush: skipPush,
            #skipEnrichUrl: skipEnrichUrl,
          },
        ),
        returnValue: _i12.Future<_i7.SendMessageResponse>.value(
            _FakeSendMessageResponse_31(
          this,
          Invocation.method(
            #sendMessage,
            [
              message,
              channelId,
              channelType,
            ],
            {
              #skipPush: skipPush,
              #skipEnrichUrl: skipEnrichUrl,
            },
          ),
        )),
      ) as _i12.Future<_i7.SendMessageResponse>);
  @override
  _i12.Future<_i7.QueryRepliesResponse> getReplies(
    String? parentId, {
    _i21.PaginationParams? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReplies,
          [parentId],
          {#options: options},
        ),
        returnValue: _i12.Future<_i7.QueryRepliesResponse>.value(
            _FakeQueryRepliesResponse_32(
          this,
          Invocation.method(
            #getReplies,
            [parentId],
            {#options: options},
          ),
        )),
      ) as _i12.Future<_i7.QueryRepliesResponse>);
  @override
  _i12.Future<_i7.QueryReactionsResponse> getReactions(
    String? messageId, {
    _i21.PaginationParams? pagination,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReactions,
          [messageId],
          {#pagination: pagination},
        ),
        returnValue: _i12.Future<_i7.QueryReactionsResponse>.value(
            _FakeQueryReactionsResponse_33(
          this,
          Invocation.method(
            #getReactions,
            [messageId],
            {#pagination: pagination},
          ),
        )),
      ) as _i12.Future<_i7.QueryReactionsResponse>);
  @override
  _i12.Future<_i7.UpdateMessageResponse> updateMessage(
    _i25.Message? message, {
    bool? skipEnrichUrl = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessage,
          [message],
          {#skipEnrichUrl: skipEnrichUrl},
        ),
        returnValue: _i12.Future<_i7.UpdateMessageResponse>.value(
            _FakeUpdateMessageResponse_34(
          this,
          Invocation.method(
            #updateMessage,
            [message],
            {#skipEnrichUrl: skipEnrichUrl},
          ),
        )),
      ) as _i12.Future<_i7.UpdateMessageResponse>);
  @override
  _i12.Future<_i7.UpdateMessageResponse> partialUpdateMessage(
    String? messageId, {
    Map<String, Object?>? set,
    List<String>? unset,
    bool? skipEnrichUrl = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #partialUpdateMessage,
          [messageId],
          {
            #set: set,
            #unset: unset,
            #skipEnrichUrl: skipEnrichUrl,
          },
        ),
        returnValue: _i12.Future<_i7.UpdateMessageResponse>.value(
            _FakeUpdateMessageResponse_34(
          this,
          Invocation.method(
            #partialUpdateMessage,
            [messageId],
            {
              #set: set,
              #unset: unset,
              #skipEnrichUrl: skipEnrichUrl,
            },
          ),
        )),
      ) as _i12.Future<_i7.UpdateMessageResponse>);
  @override
  _i12.Future<_i7.EmptyResponse> deleteMessage(
    String? messageId, {
    bool? hard,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [messageId],
          {#hard: hard},
        ),
        returnValue: _i12.Future<_i7.EmptyResponse>.value(_FakeEmptyResponse_15(
          this,
          Invocation.method(
            #deleteMessage,
            [messageId],
            {#hard: hard},
          ),
        )),
      ) as _i12.Future<_i7.EmptyResponse>);
  @override
  _i12.Future<_i7.GetMessageResponse> getMessage(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessage,
          [messageId],
        ),
        returnValue: _i12.Future<_i7.GetMessageResponse>.value(
            _FakeGetMessageResponse_35(
          this,
          Invocation.method(
            #getMessage,
            [messageId],
          ),
        )),
      ) as _i12.Future<_i7.GetMessageResponse>);
  @override
  _i12.Future<_i7.GetMessagesByIdResponse> getMessagesById(
    String? channelId,
    String? channelType,
    List<String>? messageIDs,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessagesById,
          [
            channelId,
            channelType,
            messageIDs,
          ],
        ),
        returnValue: _i12.Future<_i7.GetMessagesByIdResponse>.value(
            _FakeGetMessagesByIdResponse_36(
          this,
          Invocation.method(
            #getMessagesById,
            [
              channelId,
              channelType,
              messageIDs,
            ],
          ),
        )),
      ) as _i12.Future<_i7.GetMessagesByIdResponse>);
  @override
  _i12.Future<_i7.TranslateMessageResponse> translateMessage(
    String? messageId,
    String? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #translateMessage,
          [
            messageId,
            language,
          ],
        ),
        returnValue: _i12.Future<_i7.TranslateMessageResponse>.value(
            _FakeTranslateMessageResponse_37(
          this,
          Invocation.method(
            #translateMessage,
            [
              messageId,
              language,
            ],
          ),
        )),
      ) as _i12.Future<_i7.TranslateMessageResponse>);
  @override
  _i12.Future<_i7.PartialUpdateChannelResponse> enableSlowdown(
    String? channelId,
    String? channelType,
    int? cooldown,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableSlowdown,
          [
            channelId,
            channelType,
            cooldown,
          ],
        ),
        returnValue: _i12.Future<_i7.PartialUpdateChannelResponse>.value(
            _FakePartialUpdateChannelResponse_17(
          this,
          Invocation.method(
            #enableSlowdown,
            [
              channelId,
              channelType,
              cooldown,
            ],
          ),
        )),
      ) as _i12.Future<_i7.PartialUpdateChannelResponse>);
  @override
  _i12.Future<_i7.PartialUpdateChannelResponse> disableSlowdown(
    String? channelId,
    String? channelType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableSlowdown,
          [
            channelId,
            channelType,
          ],
        ),
        returnValue: _i12.Future<_i7.PartialUpdateChannelResponse>.value(
            _FakePartialUpdateChannelResponse_17(
          this,
          Invocation.method(
            #disableSlowdown,
            [
              channelId,
              channelType,
            ],
          ),
        )),
      ) as _i12.Future<_i7.PartialUpdateChannelResponse>);
  @override
  _i12.Future<_i7.UpdateMessageResponse> pinMessage(
    String? messageId, {
    Object? timeoutOrExpirationDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pinMessage,
          [messageId],
          {#timeoutOrExpirationDate: timeoutOrExpirationDate},
        ),
        returnValue: _i12.Future<_i7.UpdateMessageResponse>.value(
            _FakeUpdateMessageResponse_34(
          this,
          Invocation.method(
            #pinMessage,
            [messageId],
            {#timeoutOrExpirationDate: timeoutOrExpirationDate},
          ),
        )),
      ) as _i12.Future<_i7.UpdateMessageResponse>);
  @override
  _i12.Future<_i7.UpdateMessageResponse> unpinMessage(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unpinMessage,
          [messageId],
        ),
        returnValue: _i12.Future<_i7.UpdateMessageResponse>.value(
            _FakeUpdateMessageResponse_34(
          this,
          Invocation.method(
            #unpinMessage,
            [messageId],
          ),
        )),
      ) as _i12.Future<_i7.UpdateMessageResponse>);
  @override
  _i12.Future<_i7.OGAttachmentResponse> enrichUrl(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #enrichUrl,
          [url],
        ),
        returnValue: _i12.Future<_i7.OGAttachmentResponse>.value(
            _FakeOGAttachmentResponse_38(
          this,
          Invocation.method(
            #enrichUrl,
            [url],
          ),
        )),
      ) as _i12.Future<_i7.OGAttachmentResponse>);
  @override
  _i12.Future<void> disconnectUser({bool? flushChatPersistence = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnectUser,
          [],
          {#flushChatPersistence: flushChatPersistence},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}
