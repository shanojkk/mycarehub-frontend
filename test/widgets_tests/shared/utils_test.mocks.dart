// Mocks generated by Mockito 5.0.7 from annotations
// in bewell/test/widgets_tests/shared/utils_test.dart.
// Do not manually edit this file.

// Dart imports:
import 'dart:async' as _i6;
import 'dart:convert' as _i8;
import 'dart:typed_data' as _i4;

// Package imports:
import 'package:sghi_core/flutter_graphql_client/flutter_graphql_client.dart'
    as _i5;
import 'package:http/src/base_request.dart' as _i7;
import 'package:http/src/response.dart' as _i2;
import 'package:http/src/streamed_response.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeUri extends _i1.Fake implements Uri {}

class _FakeResponse extends _i1.Fake implements _i2.Response {}

class _FakeStreamedResponse extends _i1.Fake implements _i3.StreamedResponse {}

class _FakeUint8List extends _i1.Fake implements _i4.Uint8List {}

/// A class which mocks [GraphQlClient].
///
/// See the documentation for Mockito's code generation for more information.
class BaseGraphQlClient extends _i1.Mock implements _i5.GraphQlClient {
  BaseGraphQlClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get idToken =>
      (super.noSuchMethod(Invocation.getter(#idToken), returnValue: '')
          as String);
  @override
  set idToken(String? _idToken) =>
      super.noSuchMethod(Invocation.setter(#idToken, _idToken),
          returnValueForMissingStub: null);
  @override
  String get endpoint =>
      (super.noSuchMethod(Invocation.getter(#endpoint), returnValue: '')
          as String);
  @override
  set endpoint(String? _endpoint) =>
      super.noSuchMethod(Invocation.setter(#endpoint, _endpoint),
          returnValueForMissingStub: null);
  @override
  Map<String, String> get requestHeaders =>
      (super.noSuchMethod(Invocation.getter(#requestHeaders),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  bool clientIsValid() =>
      (super.noSuchMethod(Invocation.method(#clientIsValid, []),
          returnValue: false) as bool);
  @override
  bool checkQueryString(String? query) =>
      (super.noSuchMethod(Invocation.method(#checkQueryString, [query]),
          returnValue: false) as bool);
  @override
  Uri fromUriOrString(dynamic uri) =>
      (super.noSuchMethod(Invocation.method(#fromUriOrString, [uri]),
          returnValue: _FakeUri()) as Uri);
  @override
  Map<String, dynamic> toMap(_i2.Response? response) =>
      (super.noSuchMethod(Invocation.method(#toMap, [response]),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  _i6.Future<_i2.Response> query(
          String? queryString, Map<String, dynamic>? variables) =>
      (super.noSuchMethod(Invocation.method(#query, [queryString, variables]),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> postWithTimeout(Map<String, dynamic>? bodyMap) =>
      (super.noSuchMethod(Invocation.method(#postWithTimeout, [bodyMap]),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> callRESTAPI(
          {String? endpoint,
          String? method,
          Map<String, dynamic>? variables}) =>
      (super.noSuchMethod(
              Invocation.method(#callRESTAPI, [], {
                #endpoint: endpoint,
                #method: method,
                #variables: variables
              }),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i3.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i3.StreamedResponse>.value(_FakeStreamedResponse()))
          as _i6.Future<_i3.StreamedResponse>);
  @override
  _i6.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse()))
          as _i6.Future<_i2.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i4.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i4.Uint8List>.value(_FakeUint8List()))
          as _i6.Future<_i4.Uint8List>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
